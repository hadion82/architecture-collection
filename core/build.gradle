apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.compile
    buildToolsVersion build_versions.tools


    defaultConfig {
        minSdkVersion build_versions.min
        targetSdkVersion build_versions.target
        versionCode 1
        versionName '1.0.0'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.bouncycastle:bcprov-jdk16:1.46"

    //android
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:1.5.0"
    implementation "androidx.appcompat:appcompat:1.3.0"

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:3.3.1"

    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.7.2"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3"

    //ui
    def activity_ktx_version = "1.2.3"
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"

    def fragment_ktx_version = "1.3.4"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    def constraintlayout_version = "2.0.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    def navigation_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    def viewpager2_version = "1.0.0"
    implementation "androidx.viewpager2:viewpager2:$viewpager2_version"

    //lifecycle
    def lifecycle_version_extensions = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version_extensions"

    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //room
    def room_version = "2.4.0-alpha02"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    def room_compile_version = "2.2.6"
    kapt "androidx.room:room-compiler:$room_compile_version"


    //dagger hilt
    def hilt_version = "2.31.2-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_android_version = "1.0.0-alpha03"
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_android_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_android_version"
    annotationProcessor "androidx.hilt:hilt-compiler:$hilt_android_version"

    //coroutine
    def coroutine_version = "1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //rxjava
    def rxjava_version = "2.2.19"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    def rxjava_android_version = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava_android_version"

    //gson
    def gson_version = "2.8.6"
    implementation "com.google.code.gson:gson:$gson_version"

    //okhttp
    def okhttp_version = "4.9.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //retrofit
    def retrofit_versions = "2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_versions"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_versions"
    def retrofit_adapter_version = "2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_adapter_version"

    //rxbinding
    def rxbinding_version = "2.2.0"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding_version"
    def rxbinding_ktx_version = "2.1.1"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_ktx_version"

    //glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    //window
    def window_version = "1.0.0-alpha06"
    implementation "androidx.window:window:$window_version"

    def window_extensions_version = "1.0.0-alpha01"
    implementation "androidx.window:window-extensions:$window_extensions_version"

    //io
    def commons_io_version = "2.6"
    implementation "commons-io:commons-io:$commons_io_version"

    //permission
    def permissions_version = "1.0.3"
    implementation "ru.superjob:kotlin-permissions:$permissions_version"

    //dexter
    def dexter_version = "6.0.0"
    implementation "com.karumi:dexter:$dexter_version"

    //timber
    def timber_version = "4.7.1"
    api "com.jakewharton.timber:timber:$timber_version"

    //chuck
    def chuck_version = "1.1.0"
    debugImplementation "com.readystatesoftware.chuck:library:$chuck_version"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$chuck_version"

}