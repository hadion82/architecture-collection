apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion build_versions.compile
    buildToolsVersion build_versions.tools

    defaultConfig {
        applicationId "com.example.architecture.collection"
        minSdkVersion build_versions.min
        targetSdkVersion build_versions.target
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    def fragment_ktx_version = "1.2.5"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    def constraintlayout_version = "2.0.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    def recyclerview_version = "1.2.0-beta01"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //room
    def room_version = "2.3.0-alpha04"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    def room_compile_version = "2.2.6"
    kapt "androidx.room:room-compiler:$room_compile_version"

    //dagger
    def dagger_version = "2.26"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //dagger hilt
    def hilt_version = "2.28-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_android_version = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_android_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_android_version"
    annotationProcessor "androidx.hilt:hilt-compiler:$hilt_android_version"

    //paging
    def paging_version = "3.0.0-alpha05"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"
    implementation "androidx.paging:paging-guava:$paging_version"

    //okhttp
    def okhttp_version = "4.7.2"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //retrofit
    def retrofit_versions = "2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_versions"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_versions"
    def retrofit_adapter_version = "2.8.1"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_adapter_version"

    def reflect_version = "1.4.21"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$reflect_version"

    def stetho_version = "1.5.1"
    implementation "com.facebook.stetho:stetho:$stetho_version"

    //glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    api "com.github.bumptech.glide:recyclerview-integration:$glide_version"

    def startup_version = "1.0.0"
    implementation "androidx.startup:startup-runtime:$startup_version"

    def window_version = "1.0.0-alpha01"
    implementation "androidx.window:window:$window_version"
    implementation "androidx.window:window-extensions:$window_version"

    def hilt_test_version = "2.28-alpha"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_test_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_test_version"
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_test_version"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_test_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_test_version"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_test_version"

    def coroutines_test_version = "1.3.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    def robolectric_version = "4.3.1"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    def mockito_version = "2.28.2"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    implementation project(':domain')
    implementation project(':data')
    implementation project(':core')

}