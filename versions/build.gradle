plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    def appcompat_version = "1.3.0"
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    def core_ktx_version = "1.5.0"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    def junit_version = "4.13.2"
    testImplementation "junit:junit:$junit_version"

    def junit_ext_version = "1.1.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"

    def espresso_version = "3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    def android_test_version = "1.3.0"
    androidTestImplementation "androidx.test:runner:$android_test_version"
    androidTestImplementation "androidx.test:rules:$android_test_version"
    androidTestUtil "androidx.test:orchestrator:$android_test_version"

    def core_testing_version = "2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$core_testing_version"

    def hilt_test_version = "2.31.2-alpha"
    def hilt_android_compiler_version = "2.28-alpha"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_test_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_android_compiler_version"
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_compiler_version"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_test_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_android_compiler_version"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_compiler_version"

    def coroutines_test_version = "1.4.3"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    def robolectric_version = "4.3.1"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    def mockito_inline_version = "3.3.1"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"

    def mockito_kotlin2_version = "2.2.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin2_version"

    def awaitility_version = "4.0.3"
    implementation "org.awaitility:awaitility:$awaitility_version"

    def fragment_ktx_version = "1.3.4"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    def constraint_layout_version = "2.0.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    def recyclerview_version = "1.2.0"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    def lifecycle_extensions_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"

    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //room
    def room_version = "2.4.0-alpha02"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"

    def room_testing_version = "2.4.0-alpha02"
    testImplementation "androidx.room:room-testing:$room_testing_version"
    def room_compile_version = "2.2.6"
    kapt "androidx.room:room-compiler:$room_compile_version"

    //dagger
    def dagger_version = "2.35.1"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    def dagger_support_version = "2.34"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"


    //dagger hilt
    def hilt_version = "2.31.2-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_android_version = "1.0.0-alpha02"
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_android_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_android_version"
    annotationProcessor "androidx.hilt:hilt-compiler:$hilt_android_version"

    //paging
    def paging_version = "3.0.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"
    implementation "androidx.paging:paging-guava:$paging_version"

    //okhttp
    def okhttp_version = "4.9.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //retrofit
    def retrofit_versions = "2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_versions"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_versions"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_versions"

    def reflect_version = "1.5.10"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$reflect_version"

    def stetho_version = "1.5.1"
    implementation "com.facebook.stetho:stetho:$stetho_version"

    //glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    api "com.github.bumptech.glide:recyclerview-integration:$glide_version"

    def startup_version = "1.0.0"
    implementation "androidx.startup:startup-runtime:$startup_version"

    def window_version = "1.0.0-alpha06"
    implementation "androidx.window:window:$window_version"

    def window_extensions_version = "1.0.0-alpha01"
    implementation "androidx.window:window-extensions:$window_extensions_version"

    def tracing_version = '1.0.0'
    implementation "androidx.tracing:tracing-ktx:$tracing_version"

    def slidingpanelayout_version = '1.2.0-alpha02'
    implementation "androidx.slidingpanelayout:slidingpanelayout:$slidingpanelayout_version"

    def datastore_version = '1.0.0-beta01'
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    // optional - RxJava2 support
    implementation "androidx.datastore:datastore-rxjava2:$datastore_version"

    // optional - RxJava3 support
    implementation "androidx.datastore:datastore-rxjava3:$datastore_version"

    implementation "androidx.datastore:datastore-core:$datastore_version"

    //compose
    /*def compose_version = '1.0.0-beta06'
    implementation "androidx.compose.animation:animation:$compose_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with activities
    implementation "androidx.activity:activity-compose:1.3.0-alpha07"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha04"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"

    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"*/


}